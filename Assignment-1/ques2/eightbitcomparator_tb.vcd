$date
	Sun Jan 23 15:59:18 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module eightbitcomparator_tb $end
$var wire 1 ! le $end
$var wire 1 " gr $end
$var wire 1 # eq $end
$var reg 8 $ a [7:0] $end
$var reg 8 % b [7:0] $end
$scope module uut $end
$var wire 8 & a [7:0] $end
$var wire 8 ' b [7:0] $end
$var wire 8 ( l [7:0] $end
$var wire 8 ) g [7:0] $end
$var wire 8 * e [7:0] $end
$var reg 1 # eq $end
$var reg 1 " gr $end
$var reg 1 ! le $end
$scope module U0 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var reg 1 - eq $end
$var reg 1 . gr $end
$var reg 1 / le $end
$upscope $end
$scope module U1 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var reg 1 2 eq $end
$var reg 1 3 gr $end
$var reg 1 4 le $end
$upscope $end
$scope module U2 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var reg 1 7 eq $end
$var reg 1 8 gr $end
$var reg 1 9 le $end
$upscope $end
$scope module U3 $end
$var wire 1 : a $end
$var wire 1 ; b $end
$var reg 1 < eq $end
$var reg 1 = gr $end
$var reg 1 > le $end
$upscope $end
$scope module U4 $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var reg 1 A eq $end
$var reg 1 B gr $end
$var reg 1 C le $end
$upscope $end
$scope module U5 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var reg 1 F eq $end
$var reg 1 G gr $end
$var reg 1 H le $end
$upscope $end
$scope module U6 $end
$var wire 1 I a $end
$var wire 1 J b $end
$var reg 1 K eq $end
$var reg 1 L gr $end
$var reg 1 M le $end
$upscope $end
$scope module U7 $end
$var wire 1 N a $end
$var wire 1 O b $end
$var reg 1 P eq $end
$var reg 1 Q gr $end
$var reg 1 R le $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 S i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11111111111111111111111111111111 S
0R
0Q
1P
1O
1N
0M
0L
1K
1J
1I
0H
0G
1F
1E
1D
0C
0B
1A
1@
1?
0>
0=
1<
1;
1:
09
08
17
16
15
04
03
12
11
10
0/
0.
1-
1,
1+
b11111111 *
b0 )
b0 (
b11111111 '
b11111111 &
b11111111 %
b11111111 $
1#
0"
0!
$end
#5
0#
1"
b11111111111111111111111111111110 S
b11111110 *
0-
b1 )
1.
0E
0@
06
01
0,
0D
0?
05
00
b11001000 %
b11001000 '
b11001001 $
b11001001 &
#10
b11111111111111111111111111111111 S
1#
0"
b11111111 *
1-
b0 )
0.
0O
0J
16
11
1,
0N
0I
15
10
b1111 %
b1111 '
b1111 $
b1111 &
#15
1!
0#
b11111111111111111111111111111110 S
b1 (
1/
b11111110 *
0-
0;
06
01
0:
05
00
0+
b1 %
b1 '
b0 $
b0 &
#20
b11111111111111111111111111111110 S
1!
0#
1M
0K
b1000000 (
0/
1-
b10011111 *
0F
b100000 )
1G
1J
0,
1D
b1000000 %
b1000000 '
b100000 $
b100000 &
#25
1"
b11111111111111111111111111111110 S
0!
0#
b0 (
0M
1L
b10011011 *
07
b1100100 )
18
1O
0J
1@
1,
1N
1I
1?
15
1+
b10010001 %
b10010001 '
b11110101 $
b11110101 &
#30
b11111111111111111111111111111111 S
1#
0"
1F
0G
17
08
b11111111 *
1K
b0 )
0L
0O
1E
0@
1;
16
0N
0I
0?
1:
b101101 %
b101101 '
b101101 $
b101101 &
#35
