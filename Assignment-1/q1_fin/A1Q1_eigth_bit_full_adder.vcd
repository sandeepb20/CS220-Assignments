$date
	Mon Jan 24 19:45:50 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module test_bench $end
$var wire 8 ! S [7:0] $end
$var wire 1 " Cout $end
$var reg 8 # A [7:0] $end
$var reg 8 $ B [7:0] $end
$scope module ra $end
$var wire 8 % A [7:0] $end
$var wire 8 & B [7:0] $end
$var wire 1 " Cout $end
$var wire 8 ' S [7:0] $end
$scope begin genblk1[0] $end
$scope module fa1 $end
$var wire 1 ( A $end
$var wire 1 ) B $end
$var wire 1 * Cin $end
$var wire 1 + Cout $end
$var wire 1 , sum $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module fa1 $end
$var wire 1 - A $end
$var wire 1 . B $end
$var wire 1 + Cin $end
$var wire 1 / Cout $end
$var wire 1 0 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module fa1 $end
$var wire 1 1 A $end
$var wire 1 2 B $end
$var wire 1 / Cin $end
$var wire 1 3 Cout $end
$var wire 1 4 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module fa1 $end
$var wire 1 5 A $end
$var wire 1 6 B $end
$var wire 1 3 Cin $end
$var wire 1 7 Cout $end
$var wire 1 8 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module fa1 $end
$var wire 1 9 A $end
$var wire 1 : B $end
$var wire 1 7 Cin $end
$var wire 1 ; Cout $end
$var wire 1 < sum $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module fa1 $end
$var wire 1 = A $end
$var wire 1 > B $end
$var wire 1 ; Cin $end
$var wire 1 ? Cout $end
$var wire 1 @ sum $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module fa1 $end
$var wire 1 A A $end
$var wire 1 B B $end
$var wire 1 ? Cin $end
$var wire 1 C Cout $end
$var wire 1 D sum $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module fa1 $end
$var wire 1 E A $end
$var wire 1 F B $end
$var wire 1 C Cin $end
$var wire 1 G Cout $end
$var wire 1 H sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
b0 '
b0 &
b0 %
b0 $
b0 #
0"
b0 !
$end
#5
10
18
b1011 !
b1011 '
1,
1.
16
1(
b1010 $
b1010 &
b1 #
b1 %
#10
14
1<
1/
17
00
08
1+
13
b10100 !
b10100 '
0,
1)
12
11
b1111 $
b1111 &
b101 #
b101 %
#15
04
0/
10
0+
0@
1,
18
07
b11011 !
b11011 '
1<
0;
0)
0.
06
1:
1-
b10100 $
b10100 &
b111 #
b111 %
#20
1@
1;
18
1/
0<
13
00
17
0,
b101000 !
b101000 '
04
1.
16
0(
01
15
b11110 $
b11110 &
b1010 #
b1010 %
#25
08
03
14
0/
0D
10
1<
0;
1@
0?
b110111 !
b110111 '
1,
0.
02
0:
1>
1(
11
b101000 $
b101000 &
b1111 #
b1111 %
#30
1D
1?
0<
0@
07
1;
b1000110 !
b1000110 '
0,
1.
06
1:
0(
0-
05
19
b110010 $
b110010 &
b10100 #
b10100 %
#35
1<
17
00
b1010101 !
b1010101 '
1,
0.
12
16
1(
01
15
b111100 $
b111100 &
b11001 #
b11001 %
#40
1;
13
04
17
0H
1/
08
0<
1@
0?
1D
0C
b1100000 !
b1100000 '
0,
1.
06
0:
0>
1B
0(
1-
b1000110 $
b1000110 &
b11010 #
b11010 %
#45
07
18
03
14
0/
10
0<
b1101111 !
b1101111 '
1,
0.
02
1:
1(
11
b1010000 $
b1010000 &
b11111 #
b11111 %
#50
0H
0C
1D
1/
0;
0?
00
0,
14
1<
b1111100 !
b1111100 '
1@
1.
16
0(
01
05
09
1=
b1011010 $
b1011010 &
b100010 #
b100010 %
#55
1H
1C
0D
04
1?
0/
13
18
0<
0@
b10001001 !
b10001001 '
1,
0.
12
06
0:
1>
1(
0-
11
b1100100 $
b1100100 &
b100101 #
b100101 %
#60
08
1<
03
10
17
0,
b10010110 !
b10010110 '
14
1.
16
0(
01
15
b1101110 $
b1101110 &
b101000 #
b101000 %
#65
0<
1@
07
04
1;
b10101010 !
b10101010 '
18
0.
02
1:
1-
05
19
b1111000 $
b1111000 &
b110010 #
b110010 %
#70
0?
0;
08
1<
1@
0D
0C
1H
0"
0G
1,
b10110111 !
b10110111 '
14
1.
06
0:
0>
0B
1F
1(
0-
11
b10000010 $
b10000010 &
b110101 #
b110101 %
#75
00
18
0<
0@
b11001101 !
b11001101 '
1D
0.
12
16
01
09
0=
1A
b10001100 $
b10001100 &
b1000001 #
b1000001 %
#80
1@
1;
10
08
b11100110 !
b11100110 '
0,
1.
06
1:
0(
19
b10010110 $
b10010110 &
b1010000 #
b1010000 %
#85
0"
0G
1H
0C
1D
0;
0?
1,
18
1<
b11111111 !
b11111111 '
1@
1)
02
16
11
09
1=
b10011011 $
b10011011 &
b1100100 #
b1100100 %
#90
1"
1G
0H
1C
0,
00
0<
b101100 !
b101100 '
0D
0)
0.
0:
1B
b11001000 $
b11001000 &
#95
